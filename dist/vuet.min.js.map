{"version":3,"file":"vuet.min.js","sources":["../src/directives/scroll.js","../src/install.js","../src/rules/index.js","../src/vuet.js","../src/utils.js","../src/debug.js","../src/rules/life.js","../src/rules/manual.js","../src/rules/need.js","../src/rules/once.js","../src/rules/route.js","../src/index.js"],"sourcesContent":["import { _Vue } from '../install'\nimport debug from '../debug'\n\nconst _self = '__vuetScrollSelf__'\nconst _window = '__vuetScrollWindow__'\n\nclass VuetScroll {\n  constructor (opt) {\n    this.app = null\n    this.path = null\n    this.name = null\n    this.store = null\n    this.scrolls = null\n    this.setOption(opt)\n    this.scrollTo()\n    this.subScroll()\n  }\n  update (opt) {\n    this.setOption(opt)\n    this.scrollTo()\n  }\n  destroy () {\n    this.app.removeEventListener('scroll', this.subScrolling, false)\n  }\n  setOption (opt) {\n    this.app = opt.app\n    this.path = opt.path\n    this.name = opt.name || null\n    this.store = opt.store || null\n    this.scrolls = opt.scrolls || createScroll(opt)\n    function createScroll (opt) {\n      if (!opt.store.$scroll) {\n        _Vue.set(opt.store, '$scroll', {})\n      }\n      if (!opt.store.$scroll[opt.name]) {\n        _Vue.set(opt.store.$scroll, opt.name, { x: 0, y: 0 })\n      }\n\n      return opt.store.$scroll[opt.name]\n    }\n  }\n  scrollTo () {\n    const { app, scrolls } = this\n    if ('scrollTop' in app && app !== window) {\n      app.scrollLeft = scrolls.x\n      app.scrollTop = scrolls.y\n    } else {\n      app.scrollTo(scrolls.x, scrolls.y)\n    }\n  }\n  subScroll () {\n    const { app } = this\n    const newScrolls = {}\n    this.subScrolling = event => {\n      if (app === window) {\n        newScrolls.x = window.pageXOffset\n        newScrolls.y = window.pageYOffset\n      } else {\n        const { scrollTop, scrollLeft, pageXOffset, pageYOffset } = event.target\n        newScrolls.x = scrollLeft || pageYOffset || scrollLeft\n        newScrolls.y = scrollTop || pageXOffset || scrollTop\n      }\n      const key = `timer-${this.path}-${this.name}`\n      clearTimeout(this[key])\n      this[key] = setTimeout(() => {\n        Object.assign(this.scrolls, newScrolls)\n        delete this[key]\n      }, 10)\n    }\n    app.addEventListener('scroll', this.subScrolling, false)\n  }\n}\n\nfunction isSelf (modifiers) {\n  return modifiers.window !== true || modifiers.self\n}\n\nfunction isWindow (modifiers) {\n  return modifiers.window\n}\n\nexport default {\n  inserted (el, { modifiers, value }, vnode) {\n    if (typeof value.path !== 'string') return debug.error('path is imperative parameter and is string type')\n    if (value.path === 'window') return debug.error('name cannot be the window name')\n    if (isSelf(modifiers)) {\n      if (typeof value.name !== 'string') return debug.error('name is imperative parameter and is string type')\n      el[_self] = new VuetScroll({\n        app: el,\n        path: value.path,\n        name: value.name,\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.self\n      })\n    }\n    if (isWindow(modifiers)) {\n      el[_window] = new VuetScroll({\n        app: window,\n        path: value.path,\n        name: 'window',\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.window || null\n      })\n    }\n  },\n  componentUpdated (el, { modifiers, value }, vnode) {\n    if (isSelf(modifiers)) {\n      el[_self].update({\n        app: el,\n        path: value.path,\n        name: value.name,\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.self\n      })\n    }\n    if (isWindow(modifiers)) {\n      el[_window].update({\n        app: window,\n        path: value.path,\n        name: 'window',\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.window || null\n      })\n    }\n  },\n  unbind (el, { modifiers }) {\n    if (isSelf(modifiers)) {\n      el[_self].destroy()\n      delete el[_self]\n    }\n    if (isWindow(modifiers)) {\n      el[_window].destroy()\n      delete el[_window]\n    }\n  }\n}\n","import utils from './utils'\nimport scroll from './directives/scroll'\n\nexport let _Vue = null\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n  Object.defineProperty(Vue.prototype, '$vuet', {\n    get () { return this.$root._vuet }\n  })\n  Vue.mixin({\n    beforeCreate () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet._init(this)\n      }\n    },\n    destroyed () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.destroy(this)\n      }\n    }\n  })\n  Vue.directive('vuet-scroll', scroll)\n}\n","import life from './life'\nimport manual from './manual'\nimport need from './need'\nimport once from './once'\nimport route from './route'\n\nexport default function install (_Vue, Vuet) {\n  Vuet\n    .rule('life', life)\n    .rule('manual', manual)\n    .rule('need', need)\n    .rule('once', once)\n    .rule('route', route)\n}\n","import install, { _Vue } from './install'\nimport utils from './utils'\nimport debug from './debug'\nimport rules from './rules/index'\n\nexport default class Vuet {\n  constructor (options) {\n    if (!_Vue) {\n      debug.error('must call Vue.use(Vuet) before creating a store instance')\n    }\n    if (typeof Promise === 'undefined') {\n      debug.error('Vuet requires a Promise polyfill in this browser')\n    }\n    if (!utils.isObject(options)) {\n      debug.error('Parameter is the object type')\n    }\n    this.options = options || {}\n    this.app = null\n    this.store = {}\n    this.beforeHooks = [] // Before the request begins\n    this.afterHooks = [] // After the request begins\n    this.vm = null\n  }\n  beforeEach (fn) {\n    this.beforeHooks.push(fn)\n    return this\n  }\n  afterEach (fn) {\n    this.afterHooks.push(fn)\n    return this\n  }\n  _init (app) {\n    if (this.app || !app) return\n    this.app = app\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    this._options = {\n      data: function data () { return {} },\n      pathJoin: null,\n      ...this.options,\n      ...{\n        modules: {}\n      }\n    }\n    const keys = ['data', 'fetch', 'routeWatch', 'manuals']\n    const { pathJoin } = this._options\n    const initModule = (path, modules) => {\n      Object.keys(modules).forEach(k => {\n        const item = modules[k]\n        const _path = [...path, k]\n        if (utils.isFunction(item.data)) {\n          let newPath = null\n          if (pathJoin) {\n            newPath = _path.join(pathJoin)\n          } else {\n            newPath = [_path[0]]\n            for (let i = 1; i < _path.length; i++) {\n              newPath.push(_path[i].replace(/^(\\w)/, (v) => v.toUpperCase()))\n            }\n            newPath = newPath.join('')\n          }\n          this._options.modules[newPath] = item\n          this.reset(newPath)\n          utils.set(this.store[newPath], '__name__', k)\n        }\n        if (keys.indexOf(k) === -1 && utils.isObject(item)) {\n          initModule(_path, item)\n        }\n      })\n    }\n    initModule([], this.options.modules)\n    callRuleHook('init', this)\n  }\n  getState (path) {\n    return this.store[path] || {}\n  }\n  setState (path, newState) {\n    if (!utils.isObject(newState)) return this\n    if (!this.store[path]) {\n      _Vue.set(this.store, path, newState)\n      return this\n    }\n    Object.assign(this.store[path], newState)\n    return this\n  }\n  fetch (path, params, setStateBtn) {\n    const module = this._options.modules[path]\n    if (typeof module.fetch !== 'function') return Promise.resolve(this.getState(path))\n    const data = {\n      path,\n      params: { ...params },\n      state: this.getState(path),\n      route: this.app.$route || {},\n      app: this.app\n    }\n    const callHook = (hook, ...arg) => {\n      for (let i = 0; i < this[hook].length; i++) {\n        if (this[hook][i].apply(this, arg)) {\n          return false\n        }\n      }\n    }\n    if (callHook('beforeHooks', data) === false) return Promise.resolve(data.state)\n    return module.fetch.call(this, data)\n    .then(res => {\n      if (callHook('afterHooks', null, data, res) === false) return data.state\n      if (setStateBtn === false) return res\n      this.setState(path, res)\n      return data.state\n    })\n    .catch(e => {\n      if (callHook('afterHooks', e, data) === false) return Promise.resolve(data.state)\n      return Promise.reject(e)\n    })\n  }\n  reset (path) {\n    const data = this._options.data.call(this)\n    const module = this._options.modules[path]\n    if (utils.isFunction(module.data)) {\n      Object.assign(data, module.data.call(this, path))\n    }\n    this.setState(path, data)\n    return this\n  }\n  destroy () {\n    this.vm.$destroy()\n    callRuleHook('destroy', this)\n  }\n}\n\nObject.assign(Vuet, {\n  options: {\n    rules: {}\n  },\n  install,\n  rule (name, rule) {\n    if (this.options.rules[name]) return this\n    this.options.rules[name] = rule\n    callRuleHook('install', _Vue, Vuet)\n    return this\n  },\n  mapRules (...paths) {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const vueRules = []\n    const addRule = (ruleName, any) => {\n      const rules = Vuet.options.rules[ruleName]\n      if (typeof any === 'string') {\n        vueRules.push(rules.rule({ path: any }))\n      } else {\n        vueRules.push(rules.rule(any))\n      }\n    }\n    Object.keys(opt).forEach(ruleName => {\n      const any = opt[ruleName]\n      if (Array.isArray(any)) {\n        return any.forEach(item => {\n          addRule(ruleName, item)\n        })\n      }\n      addRule(ruleName, any)\n    })\n    return {\n      mixins: vueRules\n    }\n  },\n  mapModules () {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const computed = {}\n    Object.keys(opt).forEach(k => {\n      const path = opt[k]\n      computed[k] = {\n        get () {\n          return this.$vuet.store[path]\n        },\n        set (val) {\n          this.$vuet.store[path] = val\n        }\n      }\n    })\n    return { computed }\n  },\n  use (plugin, opt) {\n    if (utils.isFunction(plugin)) {\n      plugin(_Vue, Vuet, opt)\n    } else if (utils.isFunction(plugin.install)) {\n      plugin.install(_Vue, Vuet, opt)\n    }\n    return this\n  }\n})\n\nfunction callRuleHook (hook, ...arg) {\n  const { rules } = Vuet.options\n  for (let k in rules) {\n    if (utils.isFunction(rules[k][hook])) {\n      rules[k][hook].apply(rules[k], arg)\n    }\n  }\n}\n\nVuet.use(rules)\n","const toString = Object.prototype.toString\n// Cached type string\nconst typeStrings = ['Object', 'Function', 'String', 'Undefined', 'Null']\n\nconst utils = {\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (utils.isString(args[0])) {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && utils.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  set (obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: false,\n      writable: true,\n      configurable: false\n    })\n  }\n}\n\n// Add isXXX function\ntypeStrings.forEach(type => {\n  const typeString = `[object ${type}]`\n  utils[`is${type}`] = obj => {\n    return toString.call(obj) === typeString\n  }\n})\n\nexport default utils\n","export default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      },\n      destroyed () {\n        this.$vuet.reset(path, { current: this })\n      }\n    }\n  }\n}\n","export default {\n  rule ({ path, name }) {\n    return {\n      beforeCreate () {\n        const { manuals = {} } = this.$vuet._options.modules[path]\n        const methods = {}\n        Object.keys(manuals).forEach(k => {\n          const fn = manuals[k]\n          if (typeof fn === 'function') {\n            methods[`${k}`] = (...arg) => {\n              return fn.apply(methods, [{\n                state: this.$vuet.getState(path),\n                vm: this,\n                vuet: this.$vuet\n              }, ...arg])\n            }\n          }\n        })\n        methods.reset = (...arg) => {\n          return this.$vuet.reset(path, ...arg)\n        }\n        methods.fetch = (...arg) => {\n          return this.$vuet.fetch(path, ...arg)\n        }\n        const newName = name || manuals.name || `$${this.$vuet.store[path].__name__}`\n        console.log(newName)\n        this[newName] = methods\n      }\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nconst name = 'once'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, false)\n    })\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        if (this.$vuet[key][path] === false) {\n          this.$vuet.fetch(path, { current: this }).then(() => {\n            this.$vuet[key][path] = true\n          })\n        }\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nexport const _name = 'route'\nexport const _key = `__${_name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, _key, {\n      watchers: {},\n      scrolls: {}\n    })\n    Object.keys(vuet.store).forEach(path => {\n      utils.set(vuet[_key].watchers, path, [])\n      utils.set(vuet[_key].scrolls, path, {})\n    })\n  },\n  rule ({ path }) {\n    // vuet-scroll\n    function resetVuetScroll (vm) {\n      const { $scroll } = vm.$vuet.store[path]\n      if ($scroll) {\n        Object.keys($scroll).forEach(k => {\n          $scroll[k].x = 0\n          $scroll[k].y = 0\n          $scroll[k].count = $scroll[k].count ? ++$scroll[k].count : 0\n        })\n      }\n    }\n\n    // route-watch\n    function getVuetWatchs (vuet) {\n      return vuet[_key].watchers[path]\n    }\n    function setVuetWatchs (vuet, val) {\n      vuet[_key].watchers[path] = val\n    }\n    function getWatchs (obj = {}, list) {\n      if (typeof list === 'string') {\n        list = [list]\n      }\n      const getObjVal = (obj, str) => {\n        const arr = str.split('.')\n        arr.forEach(k => {\n          obj = obj[k]\n        })\n        return obj\n      }\n      const arr = []\n      list.forEach(val => {\n        let value = getObjVal(obj, val)\n        if (!isNaN(value)) {\n          value = String(value)\n        }\n        arr.push(JSON.stringify(value))\n      })\n      return arr\n    }\n\n    function diffWatch (to, from) {\n      for (let i = 0; i < to.length; i++) {\n        if (to[i] !== from[i]) {\n          return true\n        }\n      }\n      return false\n    }\n\n    return {\n      beforeCreate () {\n        const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n        const toWatch = getWatchs(this.$route, routeWatch)\n        const watch = diffWatch(toWatch, getVuetWatchs(this.$vuet))\n        if (watch) {\n          this.$vuet.reset(path)\n          setVuetWatchs(this.$vuet, toWatch)\n          resetVuetScroll(this)\n        }\n        this.$vuet.fetch(path, { current: this, routeWatch: watch }, false).then((res) => {\n          if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n          this.$vuet.setState(path, res)\n          setVuetWatchs(this.$vuet, toWatch)\n        })\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n            const toWatch = getWatchs(to, routeWatch)\n            const fromWatch = getWatchs(from, routeWatch)\n            const watch = diffWatch(toWatch, fromWatch)\n            if (!watch) return false\n            this.$vuet.fetch(path, { current: this, routeWatch: watch }).then((res) => {\n              if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n              resetVuetScroll(this)\n              this.$vuet.setState(path, res)\n              setVuetWatchs(this.$vuet, toWatch)\n            })\n          }\n        }\n      }\n    }\n  }\n}\n","import Vuet from './vuet'\n\nexport const mapRules = Vuet.mapRules.bind(Vuet)\nexport const mapModules = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n"],"names":["isSelf","modifiers","window","self","isWindow","install","Vue","installed","defineProperty","prototype","this","$root","_vuet","mixin","utils","isUndefined","$options","vuet","_init","destroy","directive","scroll","_Vue","Vuet","rule","life","manual","need","once","route","callRuleHook","hook","rules","options","arg","k","isFunction","apply","toString","Object","typeStrings","opt","args","arguments","isString","length","isObject","obj","key","value","forEach","typeString","type","call","msg","Error","_self","_window","VuetScroll","app","path","name","store","scrolls","setOption","scrollTo","subScroll","removeEventListener","subScrolling","$scroll","set","x","y","scrollLeft","scrollTop","newScrolls","pageXOffset","pageYOffset","event","target","_this","setTimeout","assign","addEventListener","el","vnode","debug","error","context","$vuet","update","fetch","current","reset","_options","modules","manuals","methods","keys","fn","getState","newName","__name__","then","_key","watchers","resetVuetScroll","vm","count","getVuetWatchs","setVuetWatchs","val","getWatchs","list","getObjVal","str","split","arr","isNaN","String","push","JSON","stringify","diffWatch","to","from","i","routeWatch","toWatch","$route","watch","res","setState","fromWatch","_this2","Promise","beforeHooks","afterHooks","pathJoin","initModule","item","_path","data","newPath","join","replace","v","toUpperCase","indexOf","newState","params","setStateBtn","module","resolve","callHook","state","catch","e","reject","$destroy","paths","getArgMerge","vueRules","addRule","ruleName","any","Array","isArray","computed","plugin","use","mapRules","bind","mapModules"],"mappings":"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"}