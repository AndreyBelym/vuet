{"version":3,"file":"vuet.min.js","sources":["../src/debug.js","../src/rules/life.js","../src/rules/need.js","../src/utils.js","../src/rules/once.js","../src/vuet-static.js","../src/vuet.js","../src/index.js","../src/rules/index.js"],"sourcesContent":["\nexport default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  },\n  assertModule (vuet, name) {\n    if (name in vuet.modules) {\n      return\n    }\n    this.error(`The '${name}' module does not exist`)\n  }\n}\n","import debug from '../debug'\n\nexport default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        this.$vuet.getModule(path).fetch()\n      },\n      destroyed () {\n        this.$vuet.getModule(path).reset()\n      }\n    }\n  }\n}\n","import debug from '../debug'\n\nexport default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        this.$vuet.getModule(path).fetch()\n      }\n    }\n  }\n}\n","const utils = {\n  isObject (obj) {\n    return !!obj && Object.prototype.toString.call(obj) === '[object Object]'\n  },\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (typeof args[0] === 'string') {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && utils.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  isPromise (obj) {\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function'\n  }\n}\n\nexport default utils\n","import debug from '../debug'\nimport utils from '../utils'\n\nexport default {\n  init (vuet) {\n    vuet.__once__ = {}\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        debug.assertModule(this.$vuet, path)\n        if (this.$vuet.__once__[path]) return\n        const back = this.$vuet.getModule(path).fetch()\n        if (utils.isPromise(back)) {\n          return back.then(res => {\n            this.$vuet.__once__[path] = true\n          })\n        }\n        this.$vuet.__once__[path] = true\n      }\n    }\n  }\n}\n","import debug from './debug'\nimport utils from './utils'\n\nexport let _Vue\n\nexport default function (Vuet) {\n  Object.assign(Vuet, {\n    installed: false,\n    options: {\n      rules: {}\n    },\n    install (Vue) {\n      if (this.installed) return this\n      this.installed = true\n      _Vue = Vue\n      Object.defineProperty(Vue.prototype, '$vuet', {\n        get () { return this.$root._vuet }\n      })\n      Vue.mixin({\n        beforeCreate () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            this._vuet = this.$options.vuet\n            // this._vuet._init(this)\n          }\n        },\n        destroyed () {\n          if (typeof this.$options.vuet !== 'undefined') {\n            this._vuet = this.$options.vuet\n            this._vuet.destroy(this)\n          }\n        }\n      })\n      return this\n    },\n    mapModules (opts) {\n      const mixins = Object.keys(opts).map(alias => {\n        const path = opts[alias]\n        return {\n          computed: {\n            [alias]: {\n              get () {\n                debug.assertModule(this.$vuet, path)\n                return this.$vuet.modules[path].state\n              },\n              set (val) {\n                debug.assertModule(this.$vuet, path)\n                this.$vuet.modules[path].state = val\n              }\n            },\n            [`$${alias}`]: {\n              get () {\n                debug.assertModule(this.$vuet, path)\n                return this.$vuet.modules[path]\n              },\n              set () { }\n            }\n          }\n        }\n      })\n      return {\n        mixins\n      }\n    },\n    mapRules () {\n      const opts = utils.getArgMerge.apply(null, arguments)\n      const vueRules = []\n      const addRule = (ruleName, any) => {\n        const rules = Vuet.options.rules[ruleName]\n        if (typeof any === 'string') {\n          vueRules.push(rules.rule({ path: any }))\n        } else {\n          vueRules.push(rules.rule(any))\n        }\n      }\n      Object.keys(opts).forEach(ruleName => {\n        const any = opts[ruleName]\n        if (Array.isArray(any)) {\n          return any.forEach(item => {\n            addRule(ruleName, item)\n          })\n        }\n        addRule(ruleName, any)\n      })\n      return {\n        mixins: vueRules\n      }\n    },\n    rule () {\n      Vuet.options.rules[arguments[0]] = arguments[1]\n      return this\n    },\n    callRuleHook (hook, vuet) {\n      Object.keys(Vuet.options.rules).forEach(k => {\n        if (typeof Vuet.options.rules[k][hook] === 'function') {\n          Vuet.options.rules[k][hook](vuet)\n        }\n      })\n    }\n  })\n}\n","import debug from './debug'\nimport utils from './utils'\nimport { _Vue } from './vuet-static'\n\nexport default class Vuet {\n  constructor (opts) {\n    if (!_Vue) {\n      debug.error('must call Vue.use(Vuet) before creating a store instance')\n    }\n    if (typeof Promise === 'undefined') {\n      debug.error('Vuet requires a Promise polyfill in this browser')\n    }\n    if (!utils.isObject(opts)) {\n      debug.error('Parameter is the object type')\n    }\n\n    this.modules = {}\n    this.store = {}\n    this.options = {\n      pathJoin: '/',\n      modules: {}\n    }\n    this.app = new _Vue({\n      data: {\n        modules: this.store\n      }\n    })\n    Object.assign(this.options, opts)\n    const initModule = (paths, modules) => {\n      Object.keys(modules).forEach(path => {\n        const newNames = [...paths, path]\n        const newName = newNames.join(this.options.pathJoin)\n        if (!utils.isObject(modules[path])) return\n        if (typeof modules[path].data === 'function') {\n          this.register(newName, modules[path])\n        }\n        Object.keys(modules[path]).forEach(chlidName => {\n          if (utils.isObject(modules[path][chlidName])) {\n            initModule(newNames, modules[path])\n          }\n        })\n      })\n    }\n    initModule([], this.options.modules)\n    Vuet.callRuleHook('init', this)\n  }\n  _init () {\n  }\n  register (path, opts) {\n    const vuet = this\n    _Vue.set(vuet.store, path, opts.data())\n    Object.defineProperty(opts, 'state', {\n      get () {\n        return vuet.store[path]\n      },\n      set (val) {\n        vuet.store[path] = val\n      }\n    })\n    Object.assign(opts, {\n      reset () {\n        this.state = this.data()\n      }\n    })\n    Object.keys(opts).forEach(k => {\n      if (typeof opts[k] === 'function') {\n        const native = opts[k]\n        opts[k] = function proxy () {\n          return native.apply(vuet.modules[path], arguments)\n        }\n      }\n    })\n    if (utils.isObject(opts.state)) {\n      Object.keys(opts.state).forEach(k => {\n        Object.defineProperty(opts, k, {\n          get () {\n            return vuet.store[path][k]\n          },\n          set (val) {\n            vuet.store[path][k] = val\n          }\n        })\n      })\n    }\n    vuet.modules[path] = opts\n    return this\n  }\n  getModule (path) {\n    return this.modules[path]\n  }\n  getState (path) {\n    return this.modules[path].state\n  }\n  destroy () {\n    this.vm.$destroy()\n    Vuet.callRuleHook('destroy', this)\n  }\n}\n","import rules from './rules/index'\nimport VuetStatic from './vuet-static'\nimport Vuet from './vuet'\n\nVuetStatic(Vuet)\nrules(Vuet)\nexport const mapRules = Vuet.mapRules.bind(Vuet)\nexport const mapModules = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n","import life from './life'\nimport need from './need'\nimport once from './once'\n\nexport default function install (Vuet) {\n  Vuet\n    .rule('life', life)\n    .rule('need', need)\n    .rule('once', once)\n}\n"],"names":["msg","Error","vuet","name","modules","error","path","assertModule","this","$vuet","getModule","fetch","reset","utils","obj","Object","prototype","toString","call","opt","args","arguments","length","isObject","then","__once__","back","isPromise","_Vue","Vuet","opts","Promise","store","options","app","assign","initModule","paths","keys","forEach","newNames","newName","join","_this","pathJoin","data","register","chlidName","callRuleHook","set","defineProperty","val","state","k","native","apply","vm","$destroy","Vue","installed","$root","_vuet","mixin","$options","destroy","map","alias","getArgMerge","vueRules","addRule","ruleName","any","rules","push","rule","Array","isArray","item","hook","life","need","once","mapRules","bind","mapModules"],"mappings":"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"}