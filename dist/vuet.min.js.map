{"version":3,"file":"vuet.min.js","sources":["../src/directives/scroll.js","../src/install.js","../src/rules/manual.js","../src/rules/index.js","../src/utils.js","../src/debug.js","../src/rules/life.js","../src/rules/need.js","../src/rules/once.js","../src/rules/route.js","../src/vuet.js","../src/index.js"],"sourcesContent":["/* @flow */\n\nimport { _Vue } from '../install'\nimport debug from '../debug'\n\nconst _self: string = '__vuetScrollSelf__'\nconst _window: string = '__vuetScrollWindow__'\n\nclass VuetScroll {\n  app: any;\n  path: string;\n  name: string;\n  store: Object;\n  timer: Object;\n  scrolls: scrolls;\n  subScrolling: Function;\n  constructor (opts: scrollsOptions) {\n    this.timer = {}\n    this.setOption(opts)\n    this.scrollTo()\n    this.subScroll()\n  }\n  update (opts: scrollsOptions) {\n    this.setOption(opts)\n    const key = `timer-${this.path}-${this.name}`\n    clearTimeout(this.timer[key])\n    this.timer[key] = setTimeout(() => {\n      this.scrollTo()\n      delete this.timer[key]\n    }, 10)\n  }\n  destroy () {\n    this.app.removeEventListener('scroll', this.subScrolling, false)\n  }\n  setOption (opt: scrollsOptions) {\n    this.app = opt.app\n    this.path = opt.path\n    this.name = opt.name || ''\n    this.store = opt.store || { x: 0, y: 0 }\n    this.scrolls = opt.scrolls || createScroll(opt)\n    function createScroll (opt) {\n      if (!opt.store.$scroll) {\n        _Vue.set(opt.store, '$scroll', {})\n      }\n      if (!opt.store.$scroll[opt.name]) {\n        _Vue.set(opt.store.$scroll, opt.name, { x: 0, y: 0 })\n      }\n\n      return opt.store.$scroll[opt.name]\n    }\n  }\n  scrollTo () {\n    const { app, scrolls } = this\n    if ('scrollTop' in app && app !== window) {\n      app.scrollLeft = scrolls.x\n      app.scrollTop = scrolls.y\n    } else {\n      app.scrollTo(scrolls.x, scrolls.y)\n    }\n  }\n  subScroll () {\n    const { app } = this\n    const newScrolls: scrolls = { x: 0, y: 0 }\n    this.subScrolling = (event: Object) => {\n      if (app === window) {\n        newScrolls.x = window.pageXOffset\n        newScrolls.y = window.pageYOffset\n      } else {\n        const { scrollTop, scrollLeft, pageXOffset, pageYOffset }: Object = event.target\n        newScrolls.x = scrollLeft || pageYOffset || scrollLeft\n        newScrolls.y = scrollTop || pageXOffset || scrollTop\n      }\n      Object.assign(this.scrolls, newScrolls)\n    }\n    app.addEventListener('scroll', this.subScrolling, false)\n  }\n}\n\nfunction isSelf (modifiers: { self?: boolean, window?: boolean }): boolean {\n  return !!(modifiers.window !== true || modifiers.self)\n}\n\nfunction isWindow (modifiers: { self?: boolean, window?: boolean }): boolean {\n  return !!(modifiers.window)\n}\n\nexport default {\n  inserted (el: Object, { modifiers, value }: DirectiveParams, vnode: Vnode) {\n    if (typeof value.path !== 'string') return debug.error('path is imperative parameter and is string type')\n    if (value.path === 'window') return debug.error('name cannot be the window name')\n    if (isSelf(modifiers)) {\n      if (typeof value.name !== 'string') return debug.error('name is imperative parameter and is string type')\n      el[_self] = new VuetScroll({\n        app: el,\n        path: value.path,\n        name: value.name,\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.self\n      })\n    }\n    if (isWindow(modifiers)) {\n      el[_window] = new VuetScroll({\n        app: window,\n        path: value.path,\n        name: 'window',\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.window\n      })\n    }\n  },\n  componentUpdated (el: Object, { modifiers, value }: DirectiveParams, vnode: Vnode) {\n    if (isSelf(modifiers)) {\n      el[_self].update({\n        app: el,\n        path: value.path,\n        name: value.name,\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.self\n      })\n    }\n    if (isWindow(modifiers)) {\n      el[_window].update({\n        app: window,\n        path: value.path,\n        name: 'window',\n        store: vnode.context.$vuet.store[value.path],\n        scrolls: value.window || null\n      })\n    }\n  },\n  unbind (el: Object, { modifiers }: DirectiveParams) {\n    if (isSelf(modifiers)) {\n      el[_self].destroy()\n      delete el[_self]\n    }\n    if (isWindow(modifiers)) {\n      el[_window].destroy()\n      delete el[_window]\n    }\n  }\n}\n","import utils from './utils'\nimport scroll from './directives/scroll'\n\nexport let _Vue = null\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n  Object.defineProperty(Vue.prototype, '$vuet', {\n    get () { return this.$root._vuet }\n  })\n  Vue.mixin({\n    beforeCreate () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet._init(this)\n      }\n    },\n    destroyed () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.destroy(this)\n      }\n    }\n  })\n  Vue.directive('vuet-scroll', scroll)\n}\n","/* @flow */\n\nimport debug from '../debug'\n\nfunction mapManuals (vuet: Object, path: string) {\n  const { manuals = {} } = vuet._options.modules[path]\n  const methods = {}\n  Object.keys(manuals).forEach(k => {\n    const fn = manuals[k]\n    if (typeof fn === 'function') {\n      methods[`${k}`] = (...arg) => {\n        return fn.apply(methods, [{\n          state: vuet.getState(path),\n          app: vuet.app,\n          vuet: vuet\n        }, ...arg])\n      }\n    }\n  })\n  methods.reset = (...arg) => {\n    return vuet.reset(path, ...arg)\n  }\n  methods.getState = (...arg) => {\n    return vuet.getState(path, ...arg)\n  }\n  methods.setState = (...arg) => {\n    return vuet.setState(path, ...arg)\n  }\n  methods.fetch = (...arg) => {\n    return vuet.fetch(path, ...arg)\n  }\n  methods.data = (...arg) => {\n    return vuet.data(path, ...arg)\n  }\n  methods.mapManuals = path => {\n    return mapManuals(vuet, path)\n  }\n  return methods\n}\n\nexport default {\n  install (Vue: Function, Vuet: Function) {\n    Vuet.prototype.mapManuals = function (path) {\n      return mapManuals(this, path)\n    }\n  },\n  rule ({ path, name }: RuleOptions) {\n    return {\n      beforeCreate () {\n        debug.assertPath(this.$vuet, path)\n        const { manuals = {} } = this.$vuet._options.modules[path]\n        const newName = name || manuals.name || `$${this.$vuet.names[path]}`\n        this[newName] = mapManuals(this.$vuet, path)\n      }\n    }\n  }\n}\n","/* @flow */\n\nimport life from './life'\nimport manual from './manual'\nimport need from './need'\nimport once from './once'\nimport route from './route'\n\nexport default function install (_Vue: Function, Vuet: Function) {\n  Vuet\n    .rule('life', life)\n    .rule('manual', manual)\n    .rule('need', need)\n    .rule('once', once)\n    .rule('route', route)\n}\n","/* @flow */\n\nconst toString = Object.prototype.toString\n// Cached type string\nconst typeStrings: Array<string> = ['Object', 'Function', 'String', 'Undefined', 'Null']\n\nconst utils: Object = {\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (utils.isString(args[0])) {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && utils.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  set (obj: Object, key: string, value: any) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: false,\n      writable: true,\n      configurable: false\n    })\n  }\n}\n\ntypeStrings.forEach((type: string) => {\n  const typeString: string = `[object ${type}]`\n  utils[`is${type}`] = obj => {\n    return toString.call(obj) === typeString\n  }\n})\n\nexport default utils\n","/* @flow */\n\nexport default {\n  error (msg: string) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg: string) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  },\n  assertPath (vuet: Object, path: string) {\n    if (path in vuet.store) {\n      return\n    }\n    this.error('The module does not exist. Call the this.$vuet method in the Vue component to see all module paths')\n  }\n}\n","/* @flow */\n\nimport debug from '../debug'\n\nexport default {\n  rule ({ path }: RuleOptions) {\n    return {\n      beforeCreate () {\n        debug.assertPath(this.$vuet, path)\n        this.$vuet.fetch(path, { current: this })\n      },\n      destroyed () {\n        this.$vuet.reset(path, { current: this })\n      }\n    }\n  }\n}\n","/* @flow */\n\nimport debug from '../debug'\n\nexport default {\n  rule ({ path }: RuleOptions) {\n    return {\n      beforeCreate () {\n        debug.assertPath(this.$vuet, path)\n        this.$vuet.fetch(path, { current: this })\n      }\n    }\n  }\n}\n","/* @flow */\n\nimport utils from '../utils'\nimport debug from '../debug'\n\nconst name = 'once'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet: Object) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, false)\n    })\n  },\n  rule ({ path }: RuleOptions) {\n    return {\n      beforeCreate () {\n        debug.assertPath(this.$vuet, path)\n        if (this.$vuet[key][path] === false) {\n          this.$vuet.fetch(path, { current: this }).then(() => {\n            this.$vuet[key][path] = true\n          })\n        }\n      }\n    }\n  }\n}\n","/* @flow */\n\nimport utils from '../utils'\nimport debug from '../debug'\n\nexport const _name = 'route'\nexport const _key = `__${_name}__`\n\nexport default {\n  init (vuet: Object) {\n    utils.set(vuet, _key, {\n      watchers: {},\n      scrolls: {}\n    })\n    Object.keys(vuet.store).forEach(path => {\n      utils.set(vuet[_key].watchers, path, [])\n      utils.set(vuet[_key].scrolls, path, {})\n    })\n  },\n  rule ({ path }: RuleOptions) {\n    // vuet-scroll\n    function resetVuetScroll (vm) {\n      const { $scroll } = vm.$vuet.store[path]\n      if ($scroll) {\n        Object.keys($scroll).forEach(k => {\n          $scroll[k].x = 0\n          $scroll[k].y = 0\n          $scroll[k].count = $scroll[k].count ? ++$scroll[k].count : 0\n        })\n      }\n    }\n\n    // route-watch\n    function getVuetWatchs (vuet: Object) {\n      return vuet[_key].watchers[path]\n    }\n    function setVuetWatchs (vuet: Object, arr: Array<string>) {\n      vuet[_key].watchers[path] = arr\n    }\n    function getWatchs (obj: Route, list: string | Array<string>): Array<string> {\n      if (typeof list === 'string') {\n        list = [list]\n      }\n      const getObjVal = (route: Route, str: string) => {\n        let obj: any = route\n        const arr: Array<string> = str.split('.')\n        arr.forEach(k => {\n          obj = obj[k]\n        })\n        return obj\n      }\n      const arr = []\n      list.forEach((val: string) => {\n        let value = getObjVal(obj, val)\n        if (!isNaN(value)) {\n          value = String(value)\n        }\n        arr.push(JSON.stringify(value))\n      })\n      return arr\n    }\n\n    function diffWatch (to: Array<string>, from: Array<string>): boolean {\n      for (let i = 0; i < to.length; i++) {\n        if (to[i] !== from[i]) {\n          return true\n        }\n      }\n      return false\n    }\n\n    return {\n      beforeCreate () {\n        debug.assertPath(this.$vuet, path)\n        const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n        const toWatch = getWatchs(this.$route, routeWatch)\n        const watch = diffWatch(toWatch, getVuetWatchs(this.$vuet))\n        if (watch) {\n          this.$vuet.reset(path)\n          setVuetWatchs(this.$vuet, toWatch)\n          resetVuetScroll(this)\n        }\n        this.$vuet.fetch(path, { current: this, routeWatch: watch }, false).then((res) => {\n          if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n          this.$vuet.setState(path, res)\n          setVuetWatchs(this.$vuet, toWatch)\n        })\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to: Route, from: Route) {\n            const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n            const toWatch = getWatchs(to, routeWatch)\n            const fromWatch = getWatchs(from, routeWatch)\n            const watch: boolean = diffWatch(toWatch, fromWatch)\n            if (!watch) return false\n            this.$vuet.fetch(path, { current: this, routeWatch: watch }).then((res) => {\n              if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n              resetVuetScroll(this)\n              this.$vuet.setState(path, res)\n              setVuetWatchs(this.$vuet, toWatch)\n            })\n          }\n        }\n      }\n    }\n  }\n}\n","import install, { _Vue } from './install'\nimport utils from './utils'\nimport debug from './debug'\nimport rules from './rules/index'\n\nexport default class Vuet {\n  static options = {\n    rules: {}\n  }\n  static install () {\n    install.apply(undefined, arguments)\n  }\n  static rule (name, rule) {\n    if (this.options.rules[name]) return this\n    this.options.rules[name] = rule\n    if (utils.isFunction(rule.install)) {\n      rule.install(_Vue, Vuet)\n    }\n    return this\n  }\n  static mapRules (...paths) {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const vueRules = []\n    const addRule = (ruleName, any) => {\n      const rules = Vuet.options.rules[ruleName]\n      if (typeof any === 'string') {\n        vueRules.push(rules.rule({ path: any }))\n      } else {\n        vueRules.push(rules.rule(any))\n      }\n    }\n    Object.keys(opt).forEach(ruleName => {\n      const any = opt[ruleName]\n      if (Array.isArray(any)) {\n        return any.forEach(item => {\n          addRule(ruleName, item)\n        })\n      }\n      addRule(ruleName, any)\n    })\n    return {\n      mixins: vueRules\n    }\n  }\n  static mapModules () {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const computed = {}\n    Object.keys(opt).forEach(k => {\n      const path = opt[k]\n      computed[k] = {\n        get () {\n          debug.assertPath(this.$vuet, path)\n          return this.$vuet.store[path]\n        },\n        set (val) {\n          debug.assertPath(this.$vuet, path)\n          this.$vuet.store[path] = val\n        }\n      }\n    })\n    return { computed }\n  }\n  static use (plugin, opt) {\n    if (utils.isFunction(plugin)) {\n      plugin(_Vue, Vuet, opt)\n    } else if (utils.isFunction(plugin.install)) {\n      plugin.install(_Vue, Vuet, opt)\n    }\n    return this\n  }\n  static callRuleHook (hook, vuet) {\n    const { rules } = Vuet.options\n    for (let k in rules) {\n      if (utils.isFunction(rules[k][hook])) {\n        rules[k][hook](vuet)\n      }\n    }\n  }\n  constructor (options) {\n    if (!_Vue) {\n      debug.error('must call Vue.use(Vuet) before creating a store instance')\n    }\n    if (typeof Promise === 'undefined') {\n      debug.error('Vuet requires a Promise polyfill in this browser')\n    }\n    if (!utils.isObject(options)) {\n      debug.error('Parameter is the object type')\n    }\n    this.version = '__version__'\n    this.options = options || {}\n    this.app = null\n    this.store = {}\n    this.names = {}\n    this.beforeHooks = [] // Before the request begins\n    this.afterHooks = [] // After the request begins\n    this.vm = null\n  }\n  beforeEach (fn) {\n    this.beforeHooks.push(fn)\n    return this\n  }\n  afterEach (fn) {\n    this.afterHooks.push(fn)\n    return this\n  }\n  _init (app) {\n    if (this.app || !app) return\n    this.app = app\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    this._options = {\n      data: function data () { return {} },\n      pathJoin: null,\n      ...this.options,\n      ...{\n        modules: {}\n      }\n    }\n    const keys = ['data', 'fetch', 'routeWatch', 'manuals']\n    const { pathJoin } = this._options\n    const initModule = (path, modules) => {\n      Object.keys(modules).forEach(k => {\n        const item = modules[k]\n        const _path = [...path, k]\n        if (utils.isFunction(item.data)) {\n          let newPath = null\n          if (pathJoin) {\n            newPath = _path.join(pathJoin)\n          } else {\n            newPath = [_path[0]]\n            for (let i = 1; i < _path.length; i++) {\n              newPath.push(_path[i].replace(/^(\\w)/, (v) => v.toUpperCase()))\n            }\n            newPath = newPath.join('')\n          }\n          this._options.modules[newPath] = item\n          this.reset(newPath)\n          this.names[newPath] = k\n        }\n        if (keys.indexOf(k) === -1 && utils.isObject(item)) {\n          initModule(_path, item)\n        }\n      })\n    }\n    initModule([], this.options.modules)\n    Vuet.callRuleHook('init', this)\n  }\n  getState (path) {\n    return this.store[path]\n  }\n  setState (path, newState) {\n    if (this.store[path] && Object.prototype.toString.call(this.store[path]) !== Object.prototype.toString.call(newState)) return this\n    if (!this.store[path] || !utils.isObject(newState)) {\n      _Vue.set(this.store, path, newState)\n      return this\n    }\n    Object.assign(this.store[path], newState)\n    return this\n  }\n  fetch (path, params, setStateBtn) {\n    const opts = this._options.modules[path]\n    if (typeof opts.fetch !== 'function') return Promise.resolve(this.getState(path))\n    const data = {\n      path,\n      params: { ...params },\n      state: this.getState(path),\n      route: this.app.$route || {},\n      app: this.app\n    }\n    const callHook = (hook, ...arg) => {\n      for (let i = 0; i < this[hook].length; i++) {\n        if (this[hook][i].apply(this, arg)) {\n          return false\n        }\n      }\n    }\n    if (callHook('beforeHooks', data) === false) return Promise.resolve(data.state)\n    return opts.fetch.call(this, data)\n      .then(res => {\n        if (callHook('afterHooks', null, data, res) === false) return data.state\n        if (setStateBtn === false) return res\n        this.setState(path, res)\n        return data.state\n      })\n      .catch(e => {\n        if (callHook('afterHooks', e, data) === false) return Promise.resolve(data.state)\n        return Promise.reject(e)\n      })\n  }\n  reset (path) {\n    const baseData = this._options.data.call(this)\n    const { data } = this._options.modules[path]\n    if (utils.isFunction(data)) {\n      const any = data.call(this, path)\n      if (utils.isObject(any)) {\n        Object.assign(baseData, any)\n        this.setState(path, baseData)\n      } else {\n        this.setState(path, any)\n      }\n    }\n    return this\n  }\n  data (path) {\n    if (!utils.isObject(this._options.modules[path])) return null\n    const { data } = this._options.modules[path]\n    return data.call(this)\n  }\n  destroy () {\n    this.vm.$destroy()\n    Vuet.callRuleHook('destroy', this)\n  }\n}\n\nVuet.use(rules)\n","/* @flow */\n\nimport Vuet from './vuet'\n\nexport const mapRules: Function = Vuet.mapRules.bind(Vuet)\nexport const mapModules: Function = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n"],"names":["isSelf","modifiers","window","self","isWindow","install","Vue","installed","defineProperty","prototype","this","$root","_vuet","mixin","utils","isUndefined","$options","vuet","_init","destroy","directive","scroll","mapManuals","path","_options","modules","manuals","methods","keys","forEach","fn","k","arg","apply","getState","app","reset","setState","fetch","data","_Vue","Vuet","rule","life","manual","need","once","route","toString","Object","typeStrings","opt","args","arguments","isString","length","isObject","obj","key","value","type","typeString","call","msg","Error","store","error","_self","_window","VuetScroll","opts","timer","setOption","scrollTo","subScroll","name","setTimeout","_this","removeEventListener","subScrolling","x","y","scrolls","$scroll","set","scrollLeft","scrollTop","newScrolls","event","pageXOffset","pageYOffset","target","assign","_this2","addEventListener","el","vnode","debug","context","$vuet","update","assertPath","current","names","then","_key","watchers","resetVuetScroll","vm","count","getVuetWatchs","setVuetWatchs","arr","getWatchs","list","getObjVal","str","split","val","isNaN","String","push","JSON","stringify","diffWatch","to","from","i","routeWatch","toWatch","$route","watch","res","fromWatch","options","Promise","version","beforeHooks","afterHooks","undefined","rules","isFunction","paths","getArgMerge","vueRules","addRule","ruleName","any","Array","isArray","item","computed","plugin","hook","pathJoin","initModule","_path","newPath","join","replace","v","toUpperCase","indexOf","callRuleHook","newState","params","setStateBtn","resolve","callHook","state","catch","e","reject","baseData","$destroy","use","mapRules","bind","mapModules"],"mappings":"8LA8EA,SAASA,GAAQC,YACgB,IAArBA,EAAUC,SAAmBD,EAAUE,MAGnD,QAASC,GAAUH,WACPA,EAAUC,OC9EtB,QAAwBG,GAASC,GAC3BD,EAAQE,cACJA,WAAY,IACbD,SACAE,eAAeF,EAAIG,UAAW,8BACnBC,MAAKC,MAAMC,WAEzBC,+BAEKC,EAAMC,YAAYL,KAAKM,SAASC,aAC9BL,MAAQF,KAAKM,SAASC,UACtBL,MAAMM,MAAMR,6BAIdI,EAAMC,YAAYL,KAAKM,SAASC,aAC9BL,MAAQF,KAAKM,SAASC,UACtBL,MAAMO,QAAQT,YAIrBU,UAAU,cAAeC,ICtB/B,QAASC,GAAYL,EAAcM,SACRN,EAAKO,SAASC,QAAQF,GAAvCG,QAAAA,kBACFC,mBACCC,KAAKF,GAASG,QAAQ,eACrBC,GAAKJ,EAAQK,EACD,mBAAPD,UACEC,GAAO,sCAAIC,+CACbF,GAAGG,MAAMN,UACPV,EAAKiB,SAASX,OAChBN,EAAKkB,SACJlB,WACFe,UAIJI,MAAQ,sCAAIJ,+CACXf,GAAKmB,eAAMb,UAASS,OAErBE,SAAW,sCAAIF,+CACdf,GAAKiB,kBAASX,UAASS,OAExBK,SAAW,sCAAIL,+CACdf,GAAKoB,kBAASd,UAASS,OAExBM,MAAQ,sCAAIN,+CACXf,GAAKqB,eAAMf,UAASS,OAErBO,KAAO,sCAAIP,+CACVf,GAAKsB,cAAKhB,UAASS,OAEpBV,WAAa,kBACZA,GAAWL,EAAMM,IAEnBI,EC7BM,QAAStB,GAASmC,EAAgBC,KAE5CC,KAAK,OAAQC,GACbD,KAAK,SAAUE,GACfF,KAAK,OAAQG,GACbH,KAAK,OAAQI,GACbJ,KAAK,QAASK,GCZnB,GAAMC,GAAWC,OAAOxC,UAAUuC,SAE5BE,GAA8B,SAAU,WAAY,SAAU,YAAa,QAE3EpC,6BAEEqC,MACEC,EAAOC,gBACTvC,GAAMwC,SAASF,EAAK,MAClBA,EAAK,IAAMA,EAAKG,OAAS,EAAIH,EAAK,GAAKA,EAAK,GACvCA,EAAK,IAAMtC,EAAM0C,SAASJ,EAAK,QAClCA,EAAK,IAEND,gBAEJM,EAAaC,EAAaC,UACtBnD,eAAeiD,EAAKC,uBAEb,YACF,gBACI,KAKpBR,GAAYrB,QAAQ,SAAC+B,MACbC,cAAgCD,aAC3BA,GAAU,kBACZZ,GAASc,KAAKL,KAASI,IC5BlC,uBACSE,QACC,IAAIC,iBAAgBD,kBAEtBA,yBAKM9C,EAAcM,GACpBA,IAAQN,GAAKgD,YAGZC,MAAM,ytBLVTC,EAAgB,qBAChBC,EAAkB,uBAElBC,wBAQSC,kBACNC,cACAC,UAAUF,QACVG,gBACAC,qDAECJ,mBACDE,UAAUF,MACTZ,YAAehD,KAAKa,SAAQb,KAAKiE,kBAC1BjE,KAAK6D,MAAMb,SACnBa,MAAMb,GAAOkB,WAAW,aACtBH,iBACEI,GAAKN,MAAMb,IACjB,2CAGEvB,IAAI2C,oBAAoB,SAAUpE,KAAKqE,cAAc,qCAEjD5B,QACJhB,IAAMgB,EAAIhB,SACVZ,KAAO4B,EAAI5B,UACXoD,KAAOxB,EAAIwB,MAAQ,QACnBV,MAAQd,EAAIc,QAAWe,EAAG,EAAGC,EAAG,QAChCC,QAAU/B,EAAI+B,kBACI/B,SAChBA,GAAIc,MAAMkB,WACRC,IAAIjC,EAAIc,MAAO,cAEjBd,EAAIc,MAAMkB,QAAQhC,EAAIwB,SACpBS,IAAIjC,EAAIc,MAAMkB,QAAShC,EAAIwB,MAAQK,EAAG,EAAGC,EAAG,IAG5C9B,EAAIc,MAAMkB,QAAQhC,EAAIwB,OATYxB,yCAanChB,GAAiBzB,KAAjByB,IAAK+C,EAAYxE,KAAZwE,OACT,cAAe/C,IAAOA,IAAQjC,UAC5BmF,WAAaH,EAAQF,IACrBM,UAAYJ,EAAQD,KAEpBR,SAASS,EAAQF,EAAGE,EAAQD,kDAI1B9C,EAAQzB,KAARyB,IACFoD,GAAwBP,EAAG,EAAGC,EAAG,QAClCF,aAAe,SAACS,MACfrD,IAAQjC,SACC8E,EAAI9E,OAAOuF,cACXR,EAAI/E,OAAOwF,gBACjB,OAC+DF,EAAMG,OAAlEL,IAAAA,UAAWD,IAAAA,WAAYI,IAAAA,YAAaC,IAAAA,cACjCV,EAAIK,GAAcK,GAAeL,IACjCJ,EAAIK,GAAaG,GAAeH,SAEtCM,OAAOC,EAAKX,QAASK,MAE1BO,iBAAiB,SAAUpF,KAAKqE,cAAc,iCAa1CgB,IAAmDC,MAArC/F,KAAAA,UAAW0D,IAAAA,SACP,gBAAfA,GAAMpC,KAAmB,MAAO0E,GAAM/B,MAAM,sDACpC,WAAfP,EAAMpC,KAAmB,MAAO0E,GAAM/B,MAAM,qCAC5ClE,EAAOC,GAAY,IACK,gBAAf0D,GAAMgB,KAAmB,MAAOsB,GAAM/B,MAAM,qDACpDC,GAAS,GAAIE,QACT0B,OACCpC,EAAMpC,UACNoC,EAAMgB,WACLqB,EAAME,QAAQC,MAAMlC,MAAMN,EAAMpC,cAC9BoC,EAAMxD,OAGfC,EAASH,OACRmE,GAAW,GAAIC,QACXnE,YACCyD,EAAMpC,UACN,eACCyE,EAAME,QAAQC,MAAMlC,MAAMN,EAAMpC,cAC9BoC,EAAMzD,qCAIH6F,IAAmDC,MAArC/F,KAAAA,UAAW0D,IAAAA,KACrC3D,GAAOC,MACNkE,GAAOiC,YACHL,OACCpC,EAAMpC,UACNoC,EAAMgB,WACLqB,EAAME,QAAQC,MAAMlC,MAAMN,EAAMpC,cAC9BoC,EAAMxD,OAGfC,EAASH,MACRmE,GAASgC,YACLlG,YACCyD,EAAMpC,UACN,eACCyE,EAAME,QAAQC,MAAMlC,MAAMN,EAAMpC,cAC9BoC,EAAMzD,QAAU,wBAIvB6F,QAAc9F,KAAAA,SAChBD,GAAOC,OACNkE,GAAOhD,gBACH4E,GAAG5B,IAER/D,EAASH,OACRmE,GAASjD,gBACL4E,GAAG3B,MCtIL5B,EAAO,4BKERjB,KAAAA,sCAGI8E,WAAW3F,KAAKyF,MAAO5E,QACxB4E,MAAM7D,MAAMf,GAAQ+E,QAAS5F,kCAG7ByF,MAAM/D,MAAMb,GAAQ+E,QAAS5F,+BJ6B/BJ,EAAemC,KACjBhC,UAAUa,WAAa,SAAUC,SAC7BD,GAAWZ,KAAMa,yBAGpBA,KAAAA,KAAMoD,IAAAA,sCAGF0B,WAAW3F,KAAKyF,MAAO5E,SACJb,KAAKyF,MAAM3E,SAASC,QAAQF,GAA7CG,QAAAA,uBACQiD,GAAQjD,EAAQiD,UAAYjE,KAAKyF,MAAMI,MAAMhF,IAC7CD,EAAWZ,KAAKyF,MAAO5E,8BK/CrCA,KAAAA,sCAGI8E,WAAW3F,KAAKyF,MAAO5E,QACxB4E,MAAM7D,MAAMf,GAAQ+E,QAAS5F,WCHpCgD,8BAGEzC,KACEmE,IAAInE,EAAMyC,aACT9B,KAAKX,EAAKgD,OAAOpC,QAAQ,cACxBuD,IAAInE,EAAKyC,GAAM3B,GAAG,0BAGpBR,KAAAA,iDAGI8E,WAAW3F,KAAKyF,MAAO5E,IACC,IAA1Bb,KAAKyF,MAAMzC,GAAKnC,SACb4E,MAAM7D,MAAMf,GAAQ+E,QAAS5F,OAAQ8F,KAAK,aACxCL,MAAMzC,GAAKnC,IAAQ,QCfvBkF,+BAGLxF,KACEmE,IAAInE,EAAMwF,mCAIT7E,KAAKX,EAAKgD,OAAOpC,QAAQ,cACxBuD,IAAInE,EAAKwF,GAAMC,SAAUnF,QACzB6D,IAAInE,EAAKwF,GAAMvB,QAAS3D,kCAKvBoF,GAAiBC,MAChBzB,GAAYyB,EAAGT,MAAMlC,MAAM1C,GAA3B4D,OACJA,WACKvD,KAAKuD,GAAStD,QAAQ,cACnBE,GAAGiD,EAAI,IACPjD,GAAGkD,EAAI,IACPlD,GAAG8E,MAAQ1B,EAAQpD,GAAG8E,QAAU1B,EAAQpD,GAAG8E,MAAQ,YAMxDC,GAAe7F,SACfA,GAAKwF,GAAMC,SAASnF,WAEpBwF,GAAe9F,EAAc+F,KAC/BP,GAAMC,SAASnF,GAAQyF,UAErBC,GAAWxD,EAAYyD,GACV,gBAATA,QACDA,OAEJC,GAAY,SAACpE,EAAcqE,MAC3B3D,GAAWV,QACYqE,GAAIC,MAAM,KACjCxF,QAAQ,cACJ4B,EAAI1B,KAEL0B,GAEHuD,cACDnF,QAAQ,SAACyF,MACR3D,GAAQwD,EAAU1D,EAAK6D,EACtBC,OAAM5D,OACD6D,OAAO7D,MAEb8D,KAAKC,KAAKC,UAAUhE,MAEnBqD,UAGAY,GAAWC,EAAmBC,OAChC,GAAIC,GAAI,EAAGA,EAAIF,EAAGtE,OAAQwE,OACzBF,EAAGE,KAAOD,EAAKC,UACV,SAGJ,KAjDHxG,KAAAA,iDAsDI8E,WAAW3F,KAAKyF,MAAO5E,SACOb,KAAKyF,MAAM3E,SAASC,QAAQF,GAAxDyG,WAAAA,aAAa,aACfC,EAAUhB,EAAUvG,KAAKwH,OAAQF,GACjCG,EAAQP,EAAUK,EAASnB,EAAcpG,KAAKyF,OAChDgC,UACGhC,MAAM/D,MAAMb,KACHb,KAAKyF,MAAO8B,KACVvH,YAEbyF,MAAM7D,MAAMf,GAAQ+E,QAAS5F,KAAMsH,WAAYG,IAAS,GAAO3B,KAAK,SAAC4B,GACpER,EAAUK,EAAShB,EAAUpC,EAAKqD,OAAQF,QACzC7B,MAAM9D,SAASd,EAAM6G,KACZvD,EAAKsB,MAAO8B,4BAKpB,mBACGJ,EAAWC,gBACkBpH,KAAKyF,MAAM3E,SAASC,QAAQF,GAAxDyG,WAAAA,aAAa,aACfC,EAAUhB,EAAUY,EAAIG,GACxBK,EAAYpB,EAAUa,EAAME,GAC5BG,EAAiBP,EAAUK,EAASI,OACrCF,EAAO,OAAO,OACdhC,MAAM7D,MAAMf,GAAQ+E,QAAS5F,KAAMsH,WAAYG,IAAS3B,KAAK,SAAC4B,GAC7DR,EAAUK,EAAShB,EAAUpB,EAAKqC,OAAQF,aAEzC7B,MAAM9D,SAASd,EAAM6G,KACZvC,EAAKM,MAAO8B,YChGnBxF,wBAyEN6F,aACN9F,KACG0B,MAAM,4DAES,mBAAZqE,YACHrE,MAAM,oDAETpD,EAAM0C,SAAS8E,MACZpE,MAAM,qCAETsE,QAAU,aACVF,QAAUA,WACVnG,IAAM,UACN8B,cACAsC,cACAkC,oBACAC,mBACA9B,GAAK,wDArFF3E,UAAM0G,GAAWtF,wCAEdsB,EAAMjC,SACbhC,MAAK4H,QAAQM,MAAMjE,GAAcjE,WAChC4H,QAAQM,MAAMjE,GAAQjC,EACvB5B,EAAM+H,WAAWnG,EAAKrC,YACnBA,QAAQmC,EAAMC,GAEd/B,oEAEWoI,4CACZ3F,GAAMrC,EAAMiI,YAAY9G,MAAM,KAAMoB,WACpC2F,KACAC,EAAU,SAACC,EAAUC,MACnBP,GAAQnG,EAAK6F,QAAQM,MAAMM,EACd,iBAARC,KACA1B,KAAKmB,EAAMlG,MAAOnB,KAAM4H,OAExB1B,KAAKmB,EAAMlG,KAAKyG,mBAGtBvH,KAAKuB,GAAKtB,QAAQ,eACjBsH,GAAMhG,EAAI+F,MACZE,MAAMC,QAAQF,SACTA,GAAItH,QAAQ,cACTqH,EAAUI,OAGdJ,EAAUC,aAGVH,2CAIJ7F,GAAMrC,EAAMiI,YAAY9G,MAAM,KAAMoB,WACpCkG,mBACC3H,KAAKuB,GAAKtB,QAAQ,eACjBN,GAAO4B,EAAIpB,KACRA,4BAECsE,WAAW3F,KAAKyF,MAAO5E,GACtBb,KAAKyF,MAAMlC,MAAM1C,iBAErB+F,KACGjB,WAAW3F,KAAKyF,MAAO5E,QACxB4E,MAAMlC,MAAM1C,GAAQ+F,OAItBiC,wCAECC,EAAQrG,SACdrC,GAAM+H,WAAWW,KACZhH,EAAMC,EAAMU,GACVrC,EAAM+H,WAAWW,EAAOnJ,YAC1BA,QAAQmC,EAAMC,EAAMU,GAEtBzC,0CAEY+I,EAAMxI,MACjB2H,GAAUnG,EAAK6F,QAAfM,UACH,GAAI7G,KAAK6G,GACR9H,EAAM+H,WAAWD,EAAM7G,GAAG0H,OACtB1H,GAAG0H,GAAMxI,6CAuBTa,eACL2G,YAAYhB,KAAK3F,GACfpB,uCAEEoB,eACJ4G,WAAWjB,KAAK3F,GACdpB,mCAEFyB,kBACDzB,KAAKyB,KAAQA,QACZA,IAAMA,OACNyE,GAAK,GAAIpE,gBAEH9B,KAAKuD,cAGXzC,iBACG,8BACI,MACPd,KAAK4H,yBAKJ1G,IAAQ,OAAQ,QAAS,aAAc,WACrC8H,EAAahJ,KAAKc,SAAlBkI,UACW,QAAbC,GAAcpI,EAAME,UACjBG,KAAKH,GAASI,QAAQ,eACrByH,GAAO7H,EAAQM,GACf6H,cAAYrI,IAAMQ,OACpBjB,EAAM+H,WAAWS,EAAK/G,MAAO,IAC3BsH,GAAU,QACVH,IACQE,EAAME,KAAKJ,OAChB,IACME,EAAM,QACZ,GAAI7B,GAAI,EAAGA,EAAI6B,EAAMrG,OAAQwE,MACxBN,KAAKmC,EAAM7B,GAAGgC,QAAQ,QAAS,SAACC,SAAMA,GAAEC,mBAExCJ,EAAQC,KAAK,MAEpBtI,SAASC,QAAQoI,GAAWP,IAC5BlH,MAAMyH,KACNtD,MAAMsD,GAAW9H,GAEC,IAArBH,EAAKsI,QAAQnI,IAAajB,EAAM0C,SAAS8F,MAChCM,EAAON,SAIT5I,KAAK4H,QAAQ7G,WACvB0I,aAAa,OAAQzJ,wCAElBa,SACDb,MAAKuD,MAAM1C,oCAEVA,EAAM6I,SACV1J,MAAKuD,MAAM1C,IAAS0B,OAAOxC,UAAUuC,SAASc,KAAKpD,KAAKuD,MAAM1C,MAAW0B,OAAOxC,UAAUuC,SAASc,KAAKsG,GAAkB1J,KACzHA,KAAKuD,MAAM1C,IAAUT,EAAM0C,SAAS4G,WAIlCxE,OAAOlF,KAAKuD,MAAM1C,GAAO6I,GACzB1J,SAJA0E,IAAI1E,KAAKuD,MAAO1C,EAAM6I,GACpB1J,oCAKJa,EAAM8I,EAAQC,cACbhG,EAAO5D,KAAKc,SAASC,QAAQF,MACT,kBAAf+C,GAAKhC,MAAsB,MAAOiG,SAAQgC,QAAQ7J,KAAKwB,SAASX,OACrEgB,uBAES8H,SACN3J,KAAKwB,SAASX,SACdb,KAAKyB,IAAI+F,eACXxH,KAAKyB,KAENqI,EAAW,SAACf,8BAASzH,uDACpB,GAAI+F,GAAI,EAAGA,EAAIlC,EAAK4D,GAAMlG,OAAQwE,OACjClC,EAAK4D,GAAM1B,GAAG9F,QAAYD,UACrB,UAIyB,IAAlCwI,EAAS,cAAejI,GAAwBgG,QAAQgC,QAAQhI,EAAKkI,OAClEnG,EAAKhC,MAAMwB,KAAKpD,KAAM6B,GAC1BiE,KAAK,mBAC4C,IAA5CgE,EAAS,aAAc,KAAMjI,EAAM6F,GAAuB7F,EAAKkI,OAC/C,IAAhBH,EAA8BlC,KAC7B/F,SAASd,EAAM6G,GACb7F,EAAKkI,SAEbC,MAAM,mBACmC,IAApCF,EAAS,aAAcG,EAAGpI,GAAwBgG,QAAQgC,QAAQhI,EAAKkI,OACpElC,QAAQqC,OAAOD,mCAGrBpJ,MACCsJ,GAAWnK,KAAKc,SAASe,KAAKuB,KAAKpD,MACjC6B,EAAS7B,KAAKc,SAASC,QAAQF,GAA/BgB,QACJzB,EAAM+H,WAAWtG,GAAO,IACpB4G,GAAM5G,EAAKuB,KAAKpD,KAAMa,EACxBT,GAAM0C,SAAS2F,WACVvD,OAAOiF,EAAU1B,QACnB9G,SAASd,EAAMsJ,SAEfxI,SAASd,EAAM4H,SAGjBzI,mCAEHa,SACCT,GAAM0C,SAAS9C,KAAKc,SAASC,QAAQF,IACzBb,KAAKc,SAASC,QAAQF,GAA/BgB,KACIuB,KAAKpD,MAFwC,4CAKpDkG,GAAGkE,aACHX,aAAa,UAAWzJ,cAhNZ+B,GACZ6F,qBAmNJyC,IAAInC,ECrNF,IAAMoC,GAAqBvI,EAAKuI,SAASC,KAAKxI,GACxCyI,EAAuBzI,EAAKyI,WAAWD,KAAKxI"}